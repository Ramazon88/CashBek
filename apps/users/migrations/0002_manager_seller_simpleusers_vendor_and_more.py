# Generated by Django 4.2 on 2023-06-06 05:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя Менеджер')),
                ('telegram_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Telegram ID')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя продавца')),
                ('telegram_id', models.CharField(max_length=100, unique=True, verbose_name='Telegram ID')),
            ],
            options={
                'verbose_name': 'Продавец',
                'verbose_name_plural': 'Продавцы',
            },
        ),
        migrations.CreateModel(
            name='SimpleUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=9, null=True, verbose_name='Номер паспорта')),
                ('pinfl', models.CharField(blank=True, error_messages={'unique': 'A user with that pinfl already exists.'}, max_length=14, null=True, unique=True, verbose_name='ПИНФЛ')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('inn', models.CharField(blank=True, max_length=100, null=True, verbose_name='Идентификационной номер налогоплательщика')),
                ('gender', models.CharField(blank=True, max_length=100, null=True, verbose_name='Пол')),
                ('birth_place', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место рождения')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Обычные пользователи',
                'verbose_name_plural': 'Обычные пользователи',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название компании')),
                ('type_of_activity', models.CharField(max_length=100, verbose_name='Тип активности')),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
            },
        ),
        migrations.AlterField(
            model_name='historicaluser',
            name='auth_status',
            field=models.CharField(choices=[('new', 'New'), ('code_verified', 'Code verified'), ('half_done', 'Done without MyID'), ('done', 'Done')], default='new', max_length=60),
        ),
        migrations.AlterField(
            model_name='historicaluser',
            name='user_type',
            field=models.CharField(choices=[('user', 'User'), ('vendor', 'Vendor'), ('manager', 'Manager'), ('seller', 'Seller')], default='user', max_length=60),
        ),
        migrations.AlterField(
            model_name='user',
            name='auth_status',
            field=models.CharField(choices=[('new', 'New'), ('code_verified', 'Code verified'), ('half_done', 'Done without MyID'), ('done', 'Done')], default='new', max_length=60),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('user', 'User'), ('vendor', 'Vendor'), ('manager', 'Manager'), ('seller', 'Seller')], default='user', max_length=60),
        ),
        migrations.CreateModel(
            name='Vendor_account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя сотрудника')),
                ('telegram_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Telegram ID')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Vendor account',
                'verbose_name_plural': 'Vendor accounts',
            },
        ),
        migrations.CreateModel(
            name='UserConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4)),
                ('expiration_time', models.DateTimeField(null=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verify_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='historicaluser',
            name='manager',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.manager'),
        ),
        migrations.AddField(
            model_name='historicaluser',
            name='seller',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.seller'),
        ),
        migrations.AddField(
            model_name='historicaluser',
            name='simple_user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.simpleusers'),
        ),
        migrations.AddField(
            model_name='historicaluser',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.vendor_account'),
        ),
        migrations.AddField(
            model_name='user',
            name='manager',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager', to='users.manager'),
        ),
        migrations.AddField(
            model_name='user',
            name='seller',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seller', to='users.seller'),
        ),
        migrations.AddField(
            model_name='user',
            name='simple_user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='simple_user', to='users.simpleusers'),
        ),
        migrations.AddField(
            model_name='user',
            name='vendor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='users.vendor_account'),
        ),
    ]
